---想定使用用途---
着地判定までのアルゴリズムについて試験する

---主な機能---
地上局からのコマンドをXbeeで受け取り落下開始判定を行い、9軸センサの加速度で着地判定をする。その後、溶断回路を動かす
csvファイル形式でログを残す
地上局にどのような段階になっているのかメッセージを送る

＜機体から地上局に送られるメッセージについて＞
start main.py：
main.pyが起動し、落下開始判定である「start」というコマンドをまっている状態になったと地上局に伝える

Nine axis sensor start：
地上局から9軸の加速度値を取得し始めたことを伝えるメッセージ
地上局から「start」を送信 or ラズパイ起動後10分経過（時間は変わる可能性あり）したら機体から送られるメッセージ

landing：
9軸センサの加速度値が着地した値を出す or ラズパイ起動後20分経過（時間は変わる可能性あり）した場合着地判定を行い、それを地上局に知らせるメッセージ

fusing circuit start：
溶断回路を動かすフェーズにきたのを地上局に送るメッセージ

fusing circuit end：
溶断回路を動かし、停止させたことを地上局に送るメッセージ

＜地上局から機体に送るコマンド一覧＞
start:
機体が落下をはじめたことを目視で確認し、地上局から「start」とコマンドを送ることで9軸センサの加速度を取得し始める



---使用方法---
０．「start main.py」というコマンドが地上局に送られてきたらmain.pyが起動し、落下開始判定である「start」を受け取る準備ができたということ
１．機体が落下開始したら地上局から機体に向かって「start」を送信し、9軸センサの加速度を取得させる
２．機体が着地判定を行い「landing」というメッセージを着地したら送られてくる
３．「fusing circuit start」というメッセージを地上局に送り、溶断回路を動かされ「fusing circuit end」というメッセージで溶断回路を停止させたということを地上局に伝える


---I2Cアドレス---
I2Cアドレスは以下のように設定した。I2C通信を使用するセンサで同じアドレスのものがある場合は変更する

9軸センサについて
＊9軸センサの表面についてる半田ジャンパ、J1とJ2ははんだづけを行わない（アドレスが変わるため）
addressG = 0x6a
addressA = 0x6a
addressM = 0x1c


---ピン番号---
9軸センサの表面についてる半田ジャンパについて
J1　：　はんだ付けしない
J2　：　はんだ付けしない

センサ側（9軸センサ）：ラズパイ側
V+　：　3.3V
GND　：　GND
SDA　：　gpio2
SCL　：　gpio3

センサ側（溶断回路）　：　ラズパイ側
基盤：gpio4
基盤：GND

機器側（Xbee）：ラズパイ側
microUSB端子　：　タイプA端子


---必須ライブラリ---

以下ソースファイルをmain.pyと同じディレクトリに用意する

Camera.py               カメラモジュール
NineAxisSensor.py       9軸センサ
DistanceAzimuth.py      GPSからゴールとの直線距離と方位角を求める
Distance.py             超音波距離センサ
SoilMoisture.py         土壌水分センサ

import csvについて
#csv形式で出力する
→おそらく標準で使用できるはずです。コマンドでインストールする必要はない

import serialについて
pip3 install pyserial　を実行することでpyserialがインストールできる。

import smbusについて
#ダウンロードする9軸を動かすためのライブラリを使用するには、sudo apt-get install python3-smbusを実行し、smbusをインストールする必要があります。
また、sudo raspi-configから、Interface Optionを選択し、I2Cから、「はい」または「Yes」をEnterで確定して、I2C通信を有効にする必要があります。
※確定後の再起動は必要ありません。

この手順に関するヘルプは
https://www.y2c.co.jp/i2c-r/raspberrypi/i2c-enable/
を参照してください。

sudo nano /etc/rc.localを実行し、エディターを開きます。
python NineAxisSensor.pyとexit0よりも前に記載し、保存して確定します。
次回から、起動時にpythonが実行されるようになります。
※この方法では、Pythonはroot権限で実行されます。
困ることがある場合は他の方法を参照してください。

opencvの導入方法
sudo apt-get install python-opencv
または　pip install opencv-python　よりインストールする。
依存関係のあるライブラリをインストールする。
sudo apt-get install libhdf5-dev libhdf5-serial-dev libhdf5-100
sudo apt-get install libqtgui4 libqtwebkit4 libqt4-test python3-pyqt5
sudo apt-get install libatlas-base-dev
sudo apt-get install libjasper-dev
他にnumpyのバージョンが古いとうまくいかないのでアプデを行うこと。
sudo pip3 install -U numpy


---磁気偏角についての説明（ChatGPT）---
一般的に、地磁気センサーの補正後の方位角の0度は、地理的な北を向いている状態を表します。
ただし、方位角の0度が地理的な北と一致するかどうかは、地域によって異なります。
これは、地球の磁場が地球表面上で一様ではなく、地域によって磁力線の傾きが異なるためです。
したがって、地域によっては、磁気偏角を考慮しても、補正後の方位角の0度が地理的な北と一致しない場合があります。
そのため、方位角の値を地図上の方向に合わせて調整する必要があります。


---参考にしたサイト---
9軸センサ
https://ja.stackoverflow.com/questions/40783/i2c-raspberrypi%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%97%E3%81%9F9%E8%BB%B8%E6%85%A3%E6%80%A7%E3%82%BB%E3%83%B3%E3%82%B5%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E3%81%94%E6%95%99%E7%A4%BA%E3%81%8F%E3%81%A0%E3%81%95%E3%81%84
https://garchiving.com/how-to-bmx055-with-sample/

照度センサ
https://s-design-tokyo.com/use-tsl25721/

---９軸センサー　LSM9DS1 ---
取扱説明書
chrome-extension://efaidnbmnnnibpcajpcglclefindmkaj/https://akizukidenshi.com/download/ds/akizuki/AE-LSM9DS1.pdf
秋月のリンク
https://akizukidenshi.com/catalog/g/gM-15381/

---照度センサ　AE-TSL25721---
取扱説明書
chrome-extension://efaidnbmnnnibpcajpcglclefindmkaj/https://akizukidenshi.com/download/ds/akizuki/AE-TSL25721_20200806.pdf
秋月のリンク
https://akizukidenshi.com/catalog/g/gK-15536/

---無線機（Xbee）　XB24CZ7WIT-004---
秋月のリンク
https://akizukidenshi.com/catalog/g/gM-10072/
