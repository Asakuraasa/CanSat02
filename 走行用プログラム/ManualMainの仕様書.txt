---想定使用用途---
main.pyで走行に必要なセンサにOS errerなどが発生し、自立走行が不可能になった場合このプログラムを動かす

---主な機能---
スタートからゴールまで機体を手動で移動させ、任意のタイミングで土壌水分センサを発動させる。
csvファイル形式でログを残す
地上局にどのような段階になっているのかメッセージを送る

＜機体から地上局に送られるメッセージについて＞
start main.py：
main.pyが正常に実行されたことを地上局側に伝える

landing now：
9軸センサの加速度値が着地した値を出す or ラズパイ起動後20分経過（時間は変わる可能性あり）した場合着地判定を行い、それを地上局に知らせるメッセージ

fusing circuit start(carrier)：
キャリア開閉用の溶断回路を動かすフェーズにきたのを地上局に送るメッセージ

fusing circuit end(carrier)：
キャリア開閉用の溶断回路を停止させたことを地上局に送るメッセージ

manual operation start：
手動運転モードになったことを地上局に知らせるメッセージ

Wrong character. Send the correct letters.：
手動運転モードで想定されているコマンド以外の文字が送信された場合に地上局に送られるメッセージ

fusing circuit start(soil moisture)：
土壌水分センサ用バネの溶断回路を動かすフェーズにきたのを地上局に送るメッセージ

fusing circuit end(soil moisture)：
土壌水分センサ用バネの溶断回路を停止させたことを地上局に送るメッセージ

soil moisture start：
土壌水分センサが動くことを知らせるメッセージ

goal now：
全ての処理が完了したことを知らせるメッセージ


＜地上局から機体に送るコマンド一覧＞
landing:
地上局に送られてきた9軸センサの加速度値をみて着地を確認し、コマンドを機体に送ることで着地判定を行う

w：
手動運転モードで3秒間直進する

d：
手動運転モードで3秒間右旋回する

a：
手動運転モードで3秒間左旋回する

s：
手動運転モードで3秒間後退する

end：
手動運転モード終了


---簡単な処理の流れ（各種コマンドやメッセージの詳しい説明については主な機能に書かれている）---

準備１．ラズパイの電源を入れると自動的に実行されるようにする 

１．走行に必要なセンサがOSerrorを起こす
２．機体が地上局から「end」というコマンドを受け取った場合「manual operation finish」を地上局に送信し、手動運転を終了する
　　　Camera.pyを動かし、写真を地上局に送る
    　機体が「w」というコマンドを受け取った場合、機体を3秒間直進させる
    　機体が「d」というコマンドを受け取った場合、機体を右旋回させる
    　機体が「a」というコマンドを受け取った場合、機体を左旋回させる
    　機体が「s」というコマンドを受け取った場合、機体を3秒間後退させる
    　機体が上記のコマンド以外を受け取った場合、「Wrong character. Send the correct letters.」と地上局に送信する
    　（上の処理を「end」と受け取るまで繰り返す）
３．「fusing circuit start(soil moisture)」というメッセージを地上局に送り、土壌水分センサ用バネの溶断回路を動かされ「fusing circuit end(soil moisture)」というメッセージで土壌水分センサ用バネの溶断回路を停止させたということを地上局に伝える
４．地上局に「soil moisture start」とメッセージを地上局に送り、土壌水分センサを動かすことを知らせる
５．水分土壌センサを動かし、その結果の値を地上局に送信する
６．機体から「goal now」と地上局に送り、全ての処理が完了したことを伝える


xbeeについて
ポート設定　PORT = '/dev/ttyUSB0'      
通信レート設定 BAUD_RATE = 9600

---必須ライブラリ---
以下ソースファイルをmain.pyと同じディレクトリに用意する
Camera.py               カメラモジュール
SoilMoisture.py         土壌水分センサ

serialの導入方法（Xbee）
pip3 install pyserial　を実行することでpyserialがインストールできる。

serialの導入方法（GPS）
「sudo raspi-config」　を打ち込み、シリアルを有効にする
「ls /dev/se*」　を打ち込み、/dev/serial0 /dev/serial1　と出力されることを確認
「cat /boot/cmdline.txt」　を入力し、エディターで「console=serial0,115200」を削除しリブートすることでcmdline.txtを修正し、serial0をコンソールとして使わないように設定する。
「sudo apt-get install python-serial」　を入力し、シリアルモジュールをインストールする

電流センサを使うためのライブラリ
sudo pip3 install pi-ina219

I2Cの有効
sudo raspi-config